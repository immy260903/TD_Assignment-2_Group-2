import os
import shutil
import maya.cmds as cmds

class MayaFileOpener:
    def __init__(self, base_path, base_file):
        self.base_path = base_path
        self.base_file = base_file
        self.dept_paths = {
            "Assets": {
                "Prop": {
                    "Car04": {
                        "Model": {
                            "Publish": os.path.join(base_path, "publish", "assets", "prop", "car04", "model", "source"),
                            "WIP": os.path.join(base_path, "wip", "assets", "prop", "car04", "model", "source")
                        },
                        "Rig": {
                            "Publish": os.path.join(base_path, "publish", "assets", "prop", "car04", "rig", "source"),
                            "WIP": os.path.join(base_path, "wip", "assets", "prop", "car04", "rig", "source")
                        }
                    }
                },
                "Character": {
                    "SpiderBot01": {
                        "Model": {
                            "Publish": os.path.join(base_path, "publish", "assets", "character", "spiderBot01", "model", "source"),
                            "WIP": os.path.join(base_path, "wip", "assets", "character", "spiderBot01", "model", "source")
                        },
                        "Rig": {
                            "Publish": os.path.join(base_path, "publish", "assets", "character", "spiderBot01", "rig", "source"),
                            "WIP": os.path.join(base_path, "wip", "assets", "character", "spiderBot01", "rig", "source")
                        },
                        "Anim": {
                            "Publish": os.path.join(base_path, "publish", "assets", "character", "spiderBot01", "anim", "source"),
                            "WIP": os.path.join(base_path, "wip", "assets", "character", "spiderBot01", "anim", "source")
                        }
                    }
                }
            },
            "Shots": {
                "Lng01": {
                    "Lng01_010": {
                        "Animation": {
                            "Publish": os.path.join(base_path, "publish", "sequence", "lng01", "lng01_010", "animation", "source"),
                            "WIP": os.path.join(base_path, "wip", "sequence", "lng01", "lng01_010", "animation", "source")
                        },
                        "Light": {
                            "WIP": os.path.join(base_path, "wip", "sequence", "lng01", "lng01_010", "light", "source")
                        }
                    }
                }
            }
        }
        
        # Open the base file
        self.open_base_file()
        
        # Create the main window
        if cmds.window("fileOpenerWindow", exists=True):
            cmds.deleteUI("fileOpenerWindow")
        self.window = cmds.window("fileOpenerWindow", title="Maya File Opener", widthHeight=(400, 200))
        
        # Create layout
        cmds.columnLayout(adjustableColumn=True)
        
        # Dropdown for department (Assets, Shots)
        self.dept_menu = cmds.optionMenu(label="Department", changeCommand=self.update_tasks)
        cmds.menuItem(label="Assets")
        cmds.menuItem(label="Shots")
        
        # Dropdown for asset/shot type (Prop, Character, etc.)
        self.type_menu = cmds.optionMenu(label="Type", changeCommand=self.update_names)
        
        # Dropdown for asset/shot name (Car04, SpiderBot01, etc.)
        self.name_menu = cmds.optionMenu(label="Name", changeCommand=self.update_steps)
        
        # Dropdown for pipeline step (Model, Rig, Animation, Light, etc.)
        self.step_menu = cmds.optionMenu(label="Step", changeCommand=self.update_versions)
        
        # Dropdown for version (WIP or Publish)
        self.version_menu = cmds.optionMenu(label="File Type")
        cmds.menuItem(label="WIP")
        cmds.menuItem(label="Publish")
        
        # Button to browse and open file
        cmds.button(label="Open File", command=self.open_file)
        
        # Show the window
        cmds.showWindow(self.window)
        
    def update_tasks(self, dept):
        # Clear the type menu
        cmds.optionMenu(self.type_menu, edit=True, deleteAllItems=True)
        
        # Populate type menu based on department selection
        for asset_type in self.dept_paths[dept].keys():
            cmds.menuItem(parent=self.type_menu, label=asset_type)
        
    def update_names(self, asset_type):
        # Clear the name menu
        cmds.optionMenu(self.name_menu, edit=True, deleteAllItems=True)
        
        # Get the selected department
        selected_dept = cmds.optionMenu(self.dept_menu, query=True, value=True)
        
        # Populate name menu based on asset type selection
        for asset_name in self.dept_paths[selected_dept][asset_type].keys():
            cmds.menuItem(parent=self.name_menu, label=asset_name)
        
    def update_steps(self, asset_name):
        # Clear the step menu
        cmds.optionMenu(self.step_menu, edit=True, deleteAllItems=True)
        
        # Get the selected department and type
        selected_dept = cmds.optionMenu(self.dept_menu, query=True, value=True)
        selected_type = cmds.optionMenu(self.type_menu, query=True, value=True)
        
        # Populate step menu based on asset name selection
        for step in self.dept_paths[selected_dept][selected_type][asset_name].keys():
            cmds.menuItem(parent=self.step_menu, label=step)
        
    def update_versions(self, step):
        # Logic to update file versions if needed
        # This is where we would scan directories for available versions in the chosen department/task
        pass
    
    def list_versions(self, file_path):
        """List available versions of a file."""
        versions = []
        for file in os.listdir(file_path):
            if file.endswith(".mb"):
                versions.append(file)
        return sorted(versions)
    
    def open_file(self, *args):
        # Get department, type, name, step, and file type
        selected_dept = cmds.optionMenu(self.dept_menu, query=True, value=True)
        selected_type = cmds.optionMenu(self.type_menu, query=True, value=True)
        selected_name = cmds.optionMenu(self.name_menu, query=True, value=True)
        selected_step = cmds.optionMenu(self.step_menu, query=True, value=True)
        selected_version = cmds.optionMenu(self.version_menu, query=True, value=True)
        
        try:
            # Extract the path from dept_paths with added checks
            file_path = self.dept_paths[selected_dept][selected_type][selected_name][selected_step][selected_version]
        except KeyError as e:
            cmds.confirmDialog(title="Error", message=f"Invalid selection: {e}. Please check your selections.", button=["OK"])
            return

        # List available versions
        versions = self.list_versions(file_path)
        if not versions:
            cmds.confirmDialog(title="Error", message="No versions found for the selected file.", button=["OK"])
            return
        
        latest_version = versions[-1]
        file_to_open = os.path.join(file_path, latest_version)
        
        # Check if the file exists
        if os.path.exists(file_to_open):
            cmds.file(file_to_open, open=True, force=True)
            cmds.confirmDialog(title="Success", message="File opened successfully!", button=["OK"])
        else:
            cmds.confirmDialog(title="Error", message="File not found!", button=["OK"])
    
    def open_base_file(self):
        # Check if the base file exists
        if os.path.exists(self.base_file):
            cmds.file(self.base_file, open=True, force=True)
            cmds.confirmDialog(title="Success", message="Base file opened successfully!", button=["OK"])
        else:
            cmds.confirmDialog(title="Error", message="Base file not found!", button=["OK"])

# Set the base folder where your project is located
base_folder_path = "C:/Users/imraa/Documents/UTS/Maya/Assessment2_Test_Assets_2024/Assessment2_Test_Assets_v002"
# Set the path to the base file
base_file_path = "C:/Users/imraa/Documents/UTS/Maya/Assessment2_Test_Assets_2024/Assesment 2 Base File.mb"
# Run the tool
MayaFileOpener(base_folder_path, base_file_path)
